{"version":3,"sources":["api/api.ts","components/Stars/stars.tsx","help/days.tsx","components/TodoList/TodoList.tsx","components/Pagination/Pagination.tsx","pages/HomePage/HomePage.tsx","components/GoogleApi/Google.tsx","pages/ArticlePage/ArticlePage.tsx","App.tsx","index.tsx"],"names":["getTodos","url","fetch","then","response","ok","Error","status","statusText","json","Stars","className","calcPablicDays","i","year","Date","getFullYear","month","getMonth","day","getDay","TodoList","todos","Geocode","setApiKey","map","item","to","name","src","pictures","alt","title","address","xmlns","fill","viewBox","width","height","d","strokeWidth","stroke","strokeLinecap","strokeLinejoin","updatedAt","Pagination","total","page","setPage","prevPage","nextPage","arr","arr1","push","arrNum","type","disabled","onClick","num","Fragment","hidden","classNames","HomePage","useState","perPage","setPerPage","heightWindow","document","documentElement","clientHeight","useEffect","Math","floor","length","slice","ceil","choosePage","Map","center","useMemo","lat","lng","zoom","mapContainerClassName","position","Google","useLoadScript","googleMapsApiKey","isLoaded","ArticlePage","titleName","useParams","id","find","todo","undefined","salary","description","employment_type","benefits","value","img","index","App","setTodos","element","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"kXAaaA,EAAW,kBAXAC,EAWc,GAV7BC,MAAM,GAAD,OAHE,oHAGF,OAAcD,IACvBE,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,YAAgCH,EAASI,aAGjD,OAAOJ,EAASK,UAPC,IAACR,G,gCCCXS,EAAkB,WAC7B,OACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,sBCXVC,EAAiB,SAACC,GAC7B,IAAMC,GAAO,IAAIC,MAAOC,cAAgB,IAAID,KAAKF,GAAGG,cAC9CC,GAAQ,IAAIF,MAAOG,WAAa,IAAIH,KAAKF,GAAGK,WAC5CC,GAAM,IAAIJ,MAAOK,SAAW,IAAIL,KAAKF,GAAGO,SAE9C,OAAa,IAATN,EACI,GAAN,OAAUA,EAAV,SAGEA,EAAO,EACH,GAAN,OAAUA,EAAV,UAGY,IAAVG,EACI,GAAN,OAAUA,EAAV,UAGEA,EAAQ,EACJ,GAAN,OAAUA,EAAV,WAGU,IAARE,EACI,GAAN,OAAUA,EAAV,QAGEA,EAAM,EACF,GAAN,OAAUA,EAAV,SAGKA,GChBIE,G,MAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAG1C,OAFAC,IAAQC,UAAU,2CAGhB,oBAAIb,UAAU,WAAd,SACGW,EAAMG,KAAI,SAAAC,GAAI,OACb,6BACE,eAAC,IAAD,CACEf,UAAU,WACVgB,GAAID,EAAKE,KAFX,UAIE,sBAAKjB,UAAU,sBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBACEA,UAAU,gBACVkB,IAAKH,EAAKI,SAAS,GACnBC,IAAI,oCAIR,sBAAKpB,UAAU,oBAAf,UACE,mBAAGA,UAAU,kBAAb,SACGe,EAAKM,QAER,mBAAGrB,UAAU,iBAAb,SACGe,EAAKO,UAGR,qBAAKtB,UAAU,iBAAf,SACE,qCACE,qBAAKuB,MAAM,6BAA6BC,KAAK,UAAUC,QAAQ,YAAYC,MAAM,OAAOC,OAAO,OAA/F,SACE,sBAAMJ,MAAM,6BAA6BK,EAAE,6rCAG7C,iCAQR,sBAAK5B,UAAU,uBAAf,UACE,cAAC,EAAD,IAEA,sBAAKA,UAAU,yBAAf,UACE,qBAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYI,YAAY,MAAMC,OAAO,eAAe9B,UAAU,UAA1H,SACE,sBAAM+B,cAAc,QAAQC,eAAe,QAAQJ,EAAE,uIAEvD,mBAAG5B,UAAU,iDAAb,0BAAyEC,EAAec,EAAKkB,WAA7F,oBA3CClB,EAAKE,a,yBCLTiB,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAaMC,EAXS,WAIb,IAHA,IAAMC,EAAiB,GAGdvC,EAAI,EAAGA,GAAKiC,EAAOjC,IAC1BuC,EAAKC,KAAKxC,GAGZ,OAAOuC,EAGGE,GAEZ,OACE,qBAAI3C,UAAU,aAAd,UACE,oBAAIA,UAAU,iBAAd,SACE,wBACE4C,KAAK,SACL5C,UAAU,YACV6C,SAAmB,IAATT,EACVU,QAASR,EAJX,iBAUDE,EAAI1B,KAAI,SAAAiC,GAAG,OACV,cAAC,IAAMC,SAAP,UACID,IAAQX,EAAO,GAAKW,IAAQX,EAAO,EACnC,oBAAIpC,UAAU,YAAd,SACE,wBACE4C,KAAK,SACL5C,UAAU,gCAIViD,OAAQF,IAAQX,EAAO,EACnBA,EAAO,EACPA,GAAQD,EAAQ,EARtB,mBAcF,oBAAInC,UAAU,YAAd,SACE,wBACE4C,KAAK,SACL5C,UAAWkD,IACT,YACA,CAAE,oBAAqBH,IAAQX,IAEjCa,OACU,IAARF,GACGA,IAAQX,GACRW,IAAQX,EAAO,GACfW,IAAQX,EAAO,GACfW,EAAMZ,EAEXW,QAAS,kBAAMT,EAAQU,IAbzB,SAeGA,OAjCYA,MAyCvB,oBAAI/C,UAAU,iBAAd,SACE,wBACE4C,KAAK,SACL5C,UAAU,YACV6C,SAAUT,IAASD,EACnBW,QAASP,EAJX,qBC9EKY,G,MAA4B,SAAC,GAAe,IAAbxC,EAAY,EAAZA,MAC1C,EAA8ByC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOhB,EAAP,KAAaC,EAAb,KACMkB,EAAeC,SAASC,gBAAgBC,aAE9CC,qBAAU,WACRL,EAAWM,KAAKC,OAAON,EAAe,KAAO,QAC5C,CAACA,IAcJ,OACE,sBAAKvD,UAAU,WAAf,UACE,sBAAMA,UAAU,OAAhB,SACGW,EAAMmD,OAAS,GACd,cAAC,EAAD,CAAUnD,MAAOA,EAAMoD,MAAM3B,EAAMiB,OAItCA,EAAU,GACT,cAAC,EAAD,CACElB,MAAOyB,KAAKI,KAAKrD,EAAMmD,OAAST,GAChCjB,KAAMA,EACNC,QAAS,SAAC4B,GAAD,OAAgB5B,EAAQ4B,IACjC3B,SAzBS,WACXF,EAAO,GACTC,EAAQD,EAAO,IAwBXG,SApBS,WACXH,EAAQA,EAAOiB,GACjBhB,EAAQD,EAAO,W,cCnBrB,SAAS8B,IACP,IAAMC,EAASC,mBAAQ,iBAAO,CAC5BC,IAAK,GACLC,IAAK,MACH,IAEJ,OACE,cAAC,IAAD,CAAWC,KAAM,GAAIJ,OAAQA,EAAQK,sBAAsB,aAA3D,SACE,cAAC,IAAD,CAAQC,SAAUN,MAKjB,IAAMO,EAA0B,WAKrC,OAJqBC,YAAc,CACjCC,iBAAkB,4CADZC,SAQD,cAACX,EAAD,IAHE,8CChBEY,G,MAA+B,SAAC,GAAe,IAAbnE,EAAY,EAAZA,MACvCoE,EAAYC,cAAYC,GAExBlE,EAAOJ,EAAMuE,MAAK,SAAAC,GAAI,OAAIA,EAAKlE,OAAS8D,KAE9C,OACE,sBAAK/E,UAAU,cAAf,eACYoF,IAATrE,GACC,sBAAKf,UAAU,yBAAf,UACE,sBAAKA,UAAU,0BAAf,UAEE,sBAAKA,UAAU,mDAAf,UACE,oBAAIA,UAAU,oBAAd,yBAEA,oBAAIA,UAAU,SAEd,sBAAKA,UAAU,OAAf,UACE,qBAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYI,YAAY,MAAMC,OAAO,eAAe9B,UAAU,UAA1H,SACE,sBAAM+B,cAAc,QAAQC,eAAe,QAAQJ,EAAE,uIAEvD,mBAAG5B,UAAU,YAAb,6BACA,qBAAKuB,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYI,YAAa,IAAKC,OAAO,eAAe9B,UAAU,UAA1H,SACE,sBAAM+B,cAAc,QAAQC,eAAe,QAAQJ,EAAE,oQAEvD,mBAAG5B,UAAU,YAAb,yBAIJ,wBAAQ4C,KAAK,SAAS5C,UAAU,6FAAhC,uBACA,sBAAKA,UAAU,yDAAf,UACE,sBAAKA,UAAU,WAAf,UACE,mBAAGA,UAAU,qBAAb,SAAmCe,EAAKM,QACxC,mBAAGrB,UAAU,iDAAb,0BAAyEC,EAAec,EAAKkB,WAA7F,aAEF,sBAAKjC,UAAU,WAAf,UACE,mBAAGA,UAAU,8CAAb,SAA4De,EAAKsE,SACjE,mBAAGrF,UAAU,kDAAb,oCAGJ,mBAAGA,UAAU,WAAb,SAAyBe,EAAKuE,cAC9B,wBAAQ1C,KAAK,SAAS5C,UAAU,6EAAhC,uBAEA,oBAAIA,UAAU,yBAAd,6BACA,oBAAIA,UAAU,cACd,mBAAGA,UAAU,sDAAb,6BACA,oBAAIA,UAAU,aAAd,SACGe,EAAKwE,gBAAgBzE,KAAI,SAAA8B,GAAI,OAC5B,oBAAI5C,UAAU,cAAd,SACE,wBAAQ4C,KAAK,SAAS5C,UAAU,uEAAhC,SAAwG4C,KADzEA,QAMrC,oBAAI5C,UAAU,yBAAd,sBACA,oBAAIA,UAAU,aAAd,SACGe,EAAKyE,SAAS1E,KAAI,SAAC2E,EAAevF,GAAhB,OAEjB,aADA,CACA,MAAIF,UAAU,cAAd,SACE,wBAAQ4C,KAAK,SAAS5C,UAAU,oFAAhC,SACGyF,KAF4BA,EAAQvF,QAQ7C,oBAAIF,UAAU,yBAAd,6BACA,oBAAIA,UAAU,mBAAd,SACGe,EAAKI,SAASL,KAAI,SAAC4E,EAAKC,GAAN,OAEjB,aADA,CACA,MAAI3F,UAAU,cAAd,SACE,qBAAKkB,IAAKwE,EAAK1F,UAAU,oBAAoBoB,IAAKsE,KADnBC,WAOvC,sBAAK3F,UAAU,mBAAf,UACE,qBAAIA,UAAU,gDAAd,qBAEE,0BAEF,qBAAKA,UAAU,0BAAf,SACE,cAAC,EAAD,CAAQe,KAAMA,YAMtB,cAAC,IAAD,CACEf,UAAU,8EACVgB,GAAG,QAFL,sCC7FO4E,EAAM,WACjB,MAA0BxC,mBAAS,IAAnC,mBAAOzC,EAAP,KAAckF,EAAd,KAMA,OAJAlC,qBAAU,WACRtE,IAAWG,MAAK,SAAAC,GAAQ,OAAIoG,EAASpG,QACpC,IAGD,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkG,OAAK,EAACG,QAAS,cAAC,EAAD,CAAUnF,MAAOA,MACvC,cAAC,IAAD,CAAOoF,KAAK,OAAOD,QAAU,cAAC,EAAD,CAAanF,MAAOA,MACjD,cAAC,IAAD,CAAOoF,KAAK,QAAQD,QAAS,cAAC,IAAD,CAAU9E,GAAG,QAC1C,cAAC,IAAD,CAAO+E,KAAK,IAAID,QAAS,qDCd/BE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJ1C,SAAS2C,eAAe,W","file":"static/js/main.54a5ff06.chunk.js","sourcesContent":["const API_URL = 'https://api.json-generator.com/templates/ZM1r0eic3XEy/data?access_token=wm3gg940gy0xek1ld98uaizhz83c6rh2sir9f9fu';\n\nexport const request = (url: string) => {\n  return fetch(`${API_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getTodos = () => request('');\n","import React from 'react';\nimport './stars.scss';\n\nexport const Stars: React.FC = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"stars stars--5\">\n        <div className=\"stars__star\"></div>\n        <div className=\"stars__star\"></div>\n        <div className=\"stars__star\"></div>\n        <div className=\"stars__star\"></div>\n        <div className=\"stars__star\"></div>\n      </div>\n    </div>\n  );\n};\n","export const calcPablicDays = (i: string) => {\n  const year = new Date().getFullYear() - new Date(i).getFullYear();\n  const month = new Date().getMonth() - new Date(i).getMonth();\n  const day = new Date().getDay() - new Date(i).getDay();\n\n  if (year === 1) {\n    return `${year} year`;\n  }\n\n  if (year > 1) {\n    return `${year} years`;\n  }\n\n  if (month === 1) {\n    return `${month} month`;\n  }\n\n  if (month > 1) {\n    return `${month} months`;\n  }\n\n  if (day === 1) {\n    return `${day} day`;\n  }\n\n  if (day > 1) {\n    return `${day} days`;\n  }\n\n  return day;\n};\n","import React from 'react';\nimport Geocode from 'react-geocode';\nimport { NavLink } from 'react-router-dom';\nimport { ITodo } from '../../types/interface';\nimport { Stars } from '../Stars/stars';\nimport { calcPablicDays } from '../../help/days';\n\nimport './todoList.scss';\n\ntype Props = {\n  todos: ITodo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  Geocode.setApiKey('AIzaSyDKshYBm9qufX92tJOOVKwcrnPV_NbGRds');\n\n  return (\n    <ul className=\"TodoList\">\n      {todos.map(item => (\n        <li key={item.name}>\n          <NavLink\n            className=\"TodoItem\"\n            to={item.name}\n          >\n            <div className=\"TodoItem__container\">\n              <div className=\"TodoItem__photo\">\n                <img\n                  className=\"TodoItem__img\"\n                  src={item.pictures[0]}\n                  alt=\"https://picsum.photos/200/300\"\n                />\n              </div>\n\n              <div className=\"TodoItem__content\">\n                <p className=\"TodoItem__title\">\n                  {item.title}\n                </p>\n                <p className=\"TodoItem__name\">\n                  {item.address}\n                </p>\n\n                <div className=\"TodoItem__name\">\n                  <>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" viewBox=\"0 0 64 64\" width=\"16px\" height=\"16px\">\n                      <path xmlns=\"http://www.w3.org/2000/svg\" d=\"M 41.849609 0 C 41.855609 0.002 41.859234 0.004859375 41.865234 0.005859375 L 41.849609 0 z M 32 3 C 26.469 3 21.453125 5.1534375 17.703125 8.6484375 L 25.548828 15.1875 L 35.345703 3.2929688 C 34.252703 3.1169688 33.141 3 32 3 z M 39.585938 4.4355469 L 29.804688 16.3125 C 30.503688 16.1125 31.238 16 32 16 C 36.418 16 40 19.582 40 24 C 40 24.099 39.988375 24.196922 39.984375 24.294922 L 49.667969 12.675781 C 47.280969 8.9597813 43.758938 6.0545469 39.585938 4.4355469 z M 17 7.2109375 L 17 7.2324219 L 17.007812 7.2226562 L 17 7.2109375 z M 15.046875 11.642578 C 12.512875 15.111578 11 19.374 11 24 C 11 26.711 11.459375 29.124469 12.234375 31.355469 L 23.005859 18.275391 L 15.046875 11.642578 z M 51.623047 16.574219 L 24.267578 49.402344 C 26.616578 52.701344 28.768984 56.350391 30.208984 60.775391 C 30.773984 62.510391 33.224062 62.510391 33.789062 60.775391 C 38.907062 45.058391 53 39.11 53 24 C 53 21.382 52.498047 18.885219 51.623047 16.574219 z M 24.033203 23.318359 L 14.068359 35.421875 C 16.131359 39.149875 18.978734 42.491281 21.802734 46.113281 L 33.722656 31.810547 C 33.166656 31.931547 32.592 32 32 32 C 27.582 32 24 28.418 24 24 C 24 23.77 24.014203 23.543359 24.033203 23.318359 z\" />\n                    </svg>\n\n                    <p>\n                      {/* {item.geoCode} */}\n                    </p>\n                  </>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"TodoItem__container2\">\n              <Stars />\n\n              <div className=\"TodoItem__posted-block\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17.593 3.322c1.1.128 1.907 1.077 1.907 2.185V21L12 17.25 4.5 21V5.507c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0111.186 0z\" />\n                </svg>\n                <p className=\"w-max-62 max-w-screen-md text-gray-300 text-lg\">{`Posted ${calcPablicDays(item.updatedAt)} ago`}</p>\n              </div>\n            </div>\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\nimport './pagination.scss';\n\nimport classNames from 'classnames';\n\ntype Props = {\n  total:number;\n  page:number;\n  setPage: (choosePage: number) => void;\n  prevPage: () => void;\n  nextPage: () => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  page,\n  setPage,\n  prevPage,\n  nextPage,\n}) => {\n  const arrNum = () => {\n    const arr1: number[] = [];\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 1; i <= total; i++) {\n      arr1.push(i);\n    }\n\n    return arr1;\n  };\n\n  const arr = arrNum();\n\n  return (\n    <ul className=\"pagination\">\n      <li className=\"page-item prev\">\n        <button\n          type=\"button\"\n          className=\"page-link\"\n          disabled={page === 1}\n          onClick={prevPage}\n        >\n          &#x3C;\n        </button>\n      </li>\n\n      {arr.map(num => (\n        <React.Fragment key={num}>\n          {(num === page - 2 || num === page + 2) ? (\n            <li className=\"page-item\">\n              <button\n                type=\"button\"\n                className=\"\n                  page-link\n                  page-link--spread\n                \"\n                hidden={num === page - 2\n                  ? page < 4\n                  : page >= total - 2}\n              >\n                ...\n              </button>\n            </li>\n          ) : (\n            <li className=\"page-item\">\n              <button\n                type=\"button\"\n                className={classNames(\n                  'page-link',\n                  { 'page-link--active': num === page },\n                )}\n                hidden={\n                  num !== 1\n                  && num !== page\n                  && num !== page + 1\n                  && num !== page - 1\n                  && num < total\n                }\n                onClick={() => setPage(num)}\n              >\n                {num}\n              </button>\n            </li>\n          )}\n\n        </React.Fragment>\n      ))}\n\n      <li className=\"page-item next\">\n        <button\n          type=\"button\"\n          className=\"page-link\"\n          disabled={page === total}\n          onClick={nextPage}\n        >\n          &#x3E;\n        </button>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { TodoList } from '../../components/TodoList/TodoList';\nimport { Pagination } from '../../components/Pagination/Pagination';\nimport { ITodo } from '../../types/interface';\n\nimport './homePage.scss';\n\ntype Props = {\n  todos: ITodo[]\n};\n\nexport const HomePage: React.FC<Props> = ({ todos }) => {\n  const [perPage, setPerPage] = useState(1);\n  const [page, setPage] = useState(1);\n  const heightWindow = document.documentElement.clientHeight;\n\n  useEffect(() => {\n    setPerPage(Math.floor((heightWindow - 195) / 174));\n  }, [heightWindow]);\n\n  const prevPage = () => {\n    if (page > 1) {\n      setPage(page - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (page < (page + perPage)) {\n      setPage(page + 1);\n    }\n  };\n\n  return (\n    <div className=\"HomePage\">\n      <main className=\"Main\">\n        {todos.length > 0 && (\n          <TodoList todos={todos.slice(page, perPage)} />\n        )}\n      </main>\n\n      {perPage > 0 && (\n        <Pagination\n          total={Math.ceil(todos.length / perPage)}\n          page={page}\n          setPage={(choosePage) => setPage(choosePage)}\n          prevPage={prevPage}\n          nextPage={nextPage}\n        />\n      )}\n    </div>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport { ITodo } from '../../types/interface';\n\nimport './google.scss';\n\ntype Props = {\n  item: ITodo\n};\n\nfunction Map() {\n  const center = useMemo(() => ({\n    lat: 44,\n    lng: 44,\n  }), []);\n\n  return (\n    <GoogleMap zoom={10} center={center} mapContainerClassName=\"Google-map\">\n      <Marker position={center} />\n    </GoogleMap>\n  );\n}\n\nexport const Google: React.FC<Props> = () => {\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey: 'AIzaSyDKshYBm9qufX92tJOOVKwcrnPV_NbGRds',\n  });\n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  }\n\n  return <Map />;\n};\n","import React from 'react';\nimport { useParams, NavLink } from 'react-router-dom';\n\nimport { calcPablicDays } from '../../help/days';\nimport { ITodo } from '../../types/interface';\nimport { Google } from '../../components/GoogleApi/Google';\n\nimport './ArticlePage.scss';\n\ntype Props = {\n  todos: ITodo[]\n};\n\nexport const ArticlePage: React.FC<Props> = ({ todos }) => {\n  const titleName = useParams().id;\n\n  const item = todos.find(todo => todo.name === titleName);\n\n  return (\n    <div className=\"ArticlePage\">\n      {item !== undefined && (\n        <div className=\"ArticlePage__container\">\n          <div className=\"ArticlePage__container2\">\n\n            <div className=\"ArticlePage__Title flex max-w-90 justify-between\">\n              <h2 className=\"text-lg font-bold\">Job Details</h2>\n\n              <hr className=\"mb-7\" />\n\n              <div className=\"flex\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17.593 3.322c1.1.128 1.907 1.077 1.907 2.185V21L12 17.25 4.5 21V5.507c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0111.186 0z\" />\n                </svg>\n                <p className=\"ml-2 mr-7\">Save to my list</p>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M7.217 10.907a2.25 2.25 0 100 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186l9.566-5.314m-9.566 7.5l9.566 5.314m0 0a2.25 2.25 0 103.935 2.186 2.25 2.25 0 00-3.935-2.186zm0-12.814a2.25 2.25 0 103.933-2.185 2.25 2.25 0 00-3.933 2.185z\" />\n                </svg>\n                <p className=\"ml-2 mr-7\">Share</p>\n              </div>\n            </div>\n\n            <button type=\"button\" className=\"ArticlePage__btn-blue btn-blue uppercase mb-7 text-xs rounded-md px-7 py-4 br-1 text-white\">Apply now</button>\n            <div className=\"ArticlePage__container-title flex wrap justify-between\">\n              <div className=\"w-max-62\">\n                <p className=\"ArticlePage__title\">{item.title}</p>\n                <p className=\"w-max-62 max-w-screen-md text-gray-300 text-lg\">{`Posted ${calcPablicDays(item.updatedAt)} ago`}</p>\n              </div>\n              <div className=\"w-max-62\">\n                <p className=\"w-max-62 font-bold max-w-screen-md text-2xl\">{item.salary}</p>\n                <p className=\"w-max-62 max-w-screen-md text-gray-300 text-2xl\">Brutto, per year</p>\n              </div>\n            </div>\n            <p className=\"max-w-90\">{item.description}</p>\n            <button type=\"button\" className=\"btn-blue uppercase mb-10 mt-3 text-xs rounded-md px-7 py-4 br-1 text-white\">Apply now</button>\n\n            <h2 className=\"text-lg font-bold mb-1\">Additional info</h2>\n            <hr className=\"mb-2 mt-1\" />\n            <p className=\"w-max-62 max-w-screen-md text-gray-300 text-lg mb-1\">Employment type</p>\n            <ul className=\"flex gap-2\">\n              {item.employment_type.map(type => (\n                <li className=\"bg-gray-700\" key={type}>\n                  <button type=\"button\" className=\"btn-2 text-btnText w-28 py-2 px-3 mb-3 border border-gray rounded-md\">{type}</button>\n                </li>\n              ))}\n            </ul>\n\n            <h2 className=\"text-lg font-bold mb-1\">Benefits</h2>\n            <ul className=\"flex gap-2\">\n              {item.benefits.map((value: string, i: number) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <li className=\"bg-gray-700\" key={value + i}>\n                  <button type=\"button\" className=\"bg-buttonYellow text-yellow min-w-60 py-2 px-8 mb-3 border border-gray rounded-md\">\n                    {value}\n                  </button>\n                </li>\n              ))}\n            </ul>\n\n            <h2 className=\"text-lg font-bold mb-1\">Attached images</h2>\n            <ul className=\"flex gap-2 mb-10\">\n              {item.pictures.map((img, index: number) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <li className=\"bg-gray-700\" key={index}>\n                  <img src={img} className=\"max-h-32 max-w-52\" alt={img} />\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"ArticlePage__map\">\n            <h2 className=\"ArticlePage__map-title text-lg font-bold mb-1\">\n              Contacts\n              <hr />\n            </h2>\n            <div className=\"ArticlePage__map-google\">\n              <Google item={item} />\n            </div>\n          </div>\n        </div>\n      )}\n\n      <NavLink\n        className=\"ArticlePage__btn btn-2 text-btnText py-2 px-3 border border-gray rounded-md\"\n        to=\"/home\"\n      >\n        RETURN TO JOB BOARD\n      </NavLink>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport { getTodos } from './api/api';\n\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { ArticlePage } from './pages/ArticlePage/ArticlePage';\n\nexport const App = () => {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    getTodos().then(response => setTodos(response));\n  }, []);\n\n  return (\n    <Routes>\n      <Route index element={<HomePage todos={todos} />} />\n      <Route path=\"/:id\" element={(<ArticlePage todos={todos} />)} />\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"*\" element={<p>Page not found</p>} />\n    </Routes>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}